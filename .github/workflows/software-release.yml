name: Software Release

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get short SHA
        id: vars
        run: |
         echo ::set-output name=sha_short::$(git rev-parse --short=7 ${{ github.sha }})

      - name: Install Arduino CLI
        uses: arduino/setup-arduino-cli@v1.0.0

      - name: Install STM libs
        run: |
          arduino-cli config init --additional-urls https://github.com/stm32duino/BoardManagerFiles/raw/master/STM32/package_stm_index.json
          arduino-cli config dump
          arduino-cli core update-index
          arduino-cli core install STM32:stm32
          arduino-cli lib install LiquidCrystal
          arduino-cli lib install "Analog Buttons"
          arduino-cli lib install OneButton
          sed -i '/recipe.output.tmp_file={build.project_name}.hex/d' "$HOME/.arduino15/packages/STM32/hardware/stm32/1.8.0/platform.txt"
          sed -i '/recipe.output.save_file={build.project_name}.{build.variant}.hex/d' "$HOME/.arduino15/packages/STM32/hardware/stm32/1.8.0/platform.txt"

      - name: Build production HW2
        run: |
          arduino-cli compile --fqbn STM32:stm32:Nucleo_64:opt=o3std,pnum=NUCLEO_F411RE --verbose src/software/firmware/srcs/respirator.cpp --output src/software/firmware/output/respirator-production
          mkdir -p dist/
          VERSION=$(sed -En 's/#define VERSION[ ]+["](.+)["]/\1/p' src/software/firmware/includes/parameters.h)
          cp src/software/firmware/output/respirator-production.bin "dist/respirator-production-HW2-$VERSION-$GITHUB_SHA.bin"

      - name: Build qualification HW2
        run: |
          sed -i 's/#define MODE MODE_PROD/#define MODE MODE_QUALIFICATION/' src/software/firmware/includes/config.h
          arduino-cli compile --fqbn STM32:stm32:Nucleo_64:opt=o3std,pnum=NUCLEO_F411RE --verbose src/software/firmware/srcs/qualification.cpp --output src/software/firmware/output/respirator-qualification
          mkdir -p dist/
          VERSION=$(sed -En 's/#define VERSION[ ]+["](.+)["]/\1/p' src/software/firmware/includes/parameters.h)
          cp src/software/firmware/output/respirator-qualification.bin "dist/respirator-qualification-HW2-$VERSION-$GITHUB_SHA.bin"

      - name: Build production HW1
        run: |
          sed -i 's/#define HARDWARE_VERSION 2/#define HARDWARE_VERSION 1/' src/software/firmware/includes/config.h
          arduino-cli compile --fqbn STM32:stm32:Nucleo_64:opt=o3std,pnum=NUCLEO_F411RE --verbose src/software/firmware/srcs/respirator.cpp --output src/software/firmware/output/respirator-production
          mkdir -p dist/
          VERSION=$(sed -En 's/#define VERSION[ ]+["](.+)["]/\1/p' src/software/firmware/includes/parameters.h)
          cp src/software/firmware/output/respirator-production.bin "dist/respirator-production-HW1-$VERSION-$GITHUB_SHA.bin"

      - name: Build qualification HW1
        run: |
          sed -i 's/#define HARDWARE_VERSION 2/#define HARDWARE_VERSION 1/' src/software/firmware/includes/config.h
          sed -i 's/#define MODE MODE_PROD/#define MODE MODE_QUALIFICATION/' src/software/firmware/includes/config.h
          arduino-cli compile --fqbn STM32:stm32:Nucleo_64:opt=o3std,pnum=NUCLEO_F411RE --verbose src/software/firmware/srcs/qualification.cpp --output src/software/firmware/output/respirator-qualification
          mkdir -p dist/
          VERSION=$(sed -En 's/#define VERSION[ ]+["](.+)["]/\1/p' src/software/firmware/includes/parameters.h)
          cp src/software/firmware/output/respirator-qualification.bin "dist/respirator-qualification-HW1-$VERSION-$GITHUB_SHA.bin"

      - name: Compress production HW2
        run: |
          mkdir -p tmp
          cp dist/respirator-production-HW2-*.bin tmp/respirator-production-HW2-${{ steps.vars.outputs.sha_short }}.bin
          gzip tmp/respirator-production-HW2-${{ steps.vars.outputs.sha_short }}.bin

      - name: Compress qualification HW2
        run: |
          mkdir -p tmp
          cp dist/respirator-qualification-HW2-*.bin tmp/respirator-qualification-HW2-${{ steps.vars.outputs.sha_short }}.bin
          gzip tmp/respirator-qualification-HW2-${{ steps.vars.outputs.sha_short }}.bin

      - name: Compress production HW1
        run: |
          mkdir -p tmp
          cp dist/respirator-production-HW1-*.bin tmp/respirator-production-HW1-${{ steps.vars.outputs.sha_short }}.bin
          gzip tmp/respirator-production-HW1-${{ steps.vars.outputs.sha_short }}.bin

      - name: Compress qualification HW1
        run: |
          mkdir -p tmp
          cp dist/respirator-qualification-HW1-*.bin tmp/respirator-qualification-HW1-${{ steps.vars.outputs.sha_short }}.bin
          gzip tmp/respirator-qualification-HW1-${{ steps.vars.outputs.sha_short }}.bin

      - name: Archive binaries
        uses: actions/upload-artifact@v1
        with:
          name: bin
          path: dist/

      - name: Release binaries
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/master'
        with:
          files: |
            tmp/respirator-production-HW2-${{ steps.vars.outputs.sha_short }}.bin.gz
            tmp/respirator-qualification-HW2-${{ steps.vars.outputs.sha_short }}.bin.gz
            tmp/respirator-production-HW1-${{ steps.vars.outputs.sha_short }}.bin.gz
            tmp/respirator-qualification-HW1-${{ steps.vars.outputs.sha_short }}.bin.gz
          body: Auto-release from GitHub Actions (${{ github.sha }})
          tag_name: auto-${{ steps.vars.outputs.sha_short }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
